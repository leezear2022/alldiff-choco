predicate diffnChoco(array[int] of var int: x,array[int] of var int: y,array[int] of var int: dx,array[int] of var int: dy);
var 0..100: X_INTRODUCED_0;
var 0..100: X_INTRODUCED_1;
var 0..100: X_INTRODUCED_2;
var 0..100: X_INTRODUCED_3;
var 0..100: X_INTRODUCED_4;
var 0..100: X_INTRODUCED_5;
var 0..100: X_INTRODUCED_6;
var 0..100: X_INTRODUCED_7;
var 0..100: X_INTRODUCED_8;
var 0..100: X_INTRODUCED_9;
var 0..100: X_INTRODUCED_10;
var 0..100: X_INTRODUCED_11;
var 0..100: X_INTRODUCED_12;
var 0..100: X_INTRODUCED_13;
var 0..100: X_INTRODUCED_14;
var 0..100: X_INTRODUCED_15;
var 0..100: X_INTRODUCED_16;
var 0..100: X_INTRODUCED_17;
var 0..100: X_INTRODUCED_18;
var 0..100: X_INTRODUCED_19;
var 0..100: X_INTRODUCED_20;
var 0..100: X_INTRODUCED_21;
var 0..100: X_INTRODUCED_22;
var 0..100: X_INTRODUCED_23;
var 0..100: X_INTRODUCED_24;
var 0..100: X_INTRODUCED_25;
var 0..100: X_INTRODUCED_26;
var 0..100: X_INTRODUCED_27;
var 0..100: X_INTRODUCED_28;
var 0..100: X_INTRODUCED_29;
var 0..100: X_INTRODUCED_30;
var 0..100: X_INTRODUCED_31;
var 0..100: X_INTRODUCED_32;
var 0..100: X_INTRODUCED_33;
var 2..102: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_112 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_113 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var 2..102: X_INTRODUCED_124 ::var_is_introduced ;
var 2..102: X_INTRODUCED_125 ::var_is_introduced ;
var 2..102: X_INTRODUCED_126 ::var_is_introduced ;
var 2..102: X_INTRODUCED_127 ::var_is_introduced ;
var 2..102: X_INTRODUCED_128 ::var_is_introduced ;
var 2..102: X_INTRODUCED_129 ::var_is_introduced ;
var 2..102: X_INTRODUCED_130 ::var_is_introduced ;
var 2..102: end:: output_var = X_INTRODUCED_130;
array[1..34] of var 0..100: t:: output_array([1..34]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array[1..34] of var 1..10: r:: output_array([1..34]) = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..26] of var 0..1000: t_add = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array[1..8] of var 0..1000: t_mul = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
array[1..2] of int: X_INTRODUCED_71 = [1,-1];
array[1..26] of var 0..100: X_INTRODUCED_102 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_13,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33];
array[1..26] of var 1..1: X_INTRODUCED_103 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..26] of int: X_INTRODUCED_104 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..8] of int: X_INTRODUCED_105 = [2,2,2,2,2,2,2,2];
array[1..8] of int: X_INTRODUCED_106 = [1,1,1,1,1,1,1,1];
array[1..8] of var int: X_INTRODUCED_107 ::var_is_introduced  = [1,1,1,1,1,1,1,1];
array[1..8] of var int: X_INTRODUCED_108 ::var_is_introduced  = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26];
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_0,X_INTRODUCED_2],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_0,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_0,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_1,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_1,X_INTRODUCED_8],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_1,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_2,X_INTRODUCED_3],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_2,X_INTRODUCED_7],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_2,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_3,X_INTRODUCED_4],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_4,X_INTRODUCED_5],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_4,X_INTRODUCED_6],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_4,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_5,X_INTRODUCED_7],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_6,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_7,X_INTRODUCED_9],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_7,X_INTRODUCED_10],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_8,X_INTRODUCED_11],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_8,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_8,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_9,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_10,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_11,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_12,X_INTRODUCED_15],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_14,X_INTRODUCED_16],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_15,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_15,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_15,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_16,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_16,X_INTRODUCED_20],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_16,X_INTRODUCED_28],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_17,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_18,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_19,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_20,X_INTRODUCED_24],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_21,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_22,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_22,X_INTRODUCED_32],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_23,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_23,X_INTRODUCED_33],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_24,X_INTRODUCED_28],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_25,X_INTRODUCED_30],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_26,X_INTRODUCED_31],-2);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_27,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_30,X_INTRODUCED_32],-1);
constraint int_lin_le(X_INTRODUCED_71,[X_INTRODUCED_31,X_INTRODUCED_33],-1);
constraint diffnChoco(X_INTRODUCED_102,X_INTRODUCED_103,X_INTRODUCED_104,X_INTRODUCED_104);
constraint diffnChoco(X_INTRODUCED_108,X_INTRODUCED_107,X_INTRODUCED_105,X_INTRODUCED_106);
constraint int_lin_eq(X_INTRODUCED_71,[X_INTRODUCED_116,X_INTRODUCED_13],1):: defines_var(X_INTRODUCED_116);
constraint int_max(X_INTRODUCED_94,X_INTRODUCED_116,X_INTRODUCED_124);
constraint int_max(X_INTRODUCED_110,X_INTRODUCED_124,X_INTRODUCED_125);
constraint int_max(X_INTRODUCED_111,X_INTRODUCED_125,X_INTRODUCED_126);
constraint int_max(X_INTRODUCED_98,X_INTRODUCED_126,X_INTRODUCED_127);
constraint int_max(X_INTRODUCED_99,X_INTRODUCED_127,X_INTRODUCED_128);
constraint int_max(X_INTRODUCED_112,X_INTRODUCED_128,X_INTRODUCED_129);
constraint int_max(X_INTRODUCED_113,X_INTRODUCED_129,X_INTRODUCED_130);
constraint int_lin_eq([1,-1],[X_INTRODUCED_24,X_INTRODUCED_94],-2):: defines_var(X_INTRODUCED_94);
constraint int_lin_eq([1,-1],[X_INTRODUCED_30,X_INTRODUCED_98],-1):: defines_var(X_INTRODUCED_98);
constraint int_lin_eq([1,-1],[X_INTRODUCED_31,X_INTRODUCED_99],-1):: defines_var(X_INTRODUCED_99);
constraint int_lin_eq([1,-1],[X_INTRODUCED_28,X_INTRODUCED_110],-1):: defines_var(X_INTRODUCED_110);
constraint int_lin_eq([1,-1],[X_INTRODUCED_29,X_INTRODUCED_111],-1):: defines_var(X_INTRODUCED_111);
constraint int_lin_eq([1,-1],[X_INTRODUCED_32,X_INTRODUCED_112],-1):: defines_var(X_INTRODUCED_112);
constraint int_lin_eq([1,-1],[X_INTRODUCED_33,X_INTRODUCED_113],-1):: defines_var(X_INTRODUCED_113);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize end;
