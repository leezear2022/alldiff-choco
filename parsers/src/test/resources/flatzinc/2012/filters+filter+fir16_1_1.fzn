predicate diffnChoco(array[int] of var int: x,array[int] of var int: y,array[int] of var int: dx,array[int] of var int: dy);
var 0..100: X_INTRODUCED_0;
var 0..100: X_INTRODUCED_1;
var 0..100: X_INTRODUCED_2;
var 0..100: X_INTRODUCED_3;
var 0..100: X_INTRODUCED_4;
var 0..100: X_INTRODUCED_5;
var 0..100: X_INTRODUCED_6;
var 0..100: X_INTRODUCED_7;
var 0..100: X_INTRODUCED_8;
var 0..100: X_INTRODUCED_9;
var 0..100: X_INTRODUCED_10;
var 0..100: X_INTRODUCED_11;
var 0..100: X_INTRODUCED_12;
var 0..100: X_INTRODUCED_13;
var 0..100: X_INTRODUCED_14;
var 0..100: X_INTRODUCED_15;
var 0..100: X_INTRODUCED_16;
var 0..100: X_INTRODUCED_17;
var 0..100: X_INTRODUCED_18;
var 0..100: X_INTRODUCED_19;
var 0..100: X_INTRODUCED_20;
var 0..100: X_INTRODUCED_21;
var 0..100: X_INTRODUCED_22;
var 0..100: X_INTRODUCED_23;
var 0..100: X_INTRODUCED_24;
var 0..100: X_INTRODUCED_25;
var 0..100: X_INTRODUCED_26;
var 0..100: X_INTRODUCED_27;
var 0..100: X_INTRODUCED_28;
var 0..100: X_INTRODUCED_29;
var 0..100: X_INTRODUCED_30;
var 0..100: X_INTRODUCED_31;
var 0..100: X_INTRODUCED_32;
var 1..101: end:: output_var;
array[1..33] of var 0..100: t:: output_array([1..33]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32];
array[1..33] of var 1..10: r:: output_array([1..33]) = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..16] of var 0..1000: t_add = [X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32];
array[1..17] of var 0..1000: t_mul = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16];
array[1..2] of int: X_INTRODUCED_69 = [1,-1];
array[1..16] of var 0..100: X_INTRODUCED_103 ::var_is_introduced  = [X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32];
array[1..16] of var 1..1: X_INTRODUCED_104 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..16] of int: X_INTRODUCED_105 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..17] of var 0..100: X_INTRODUCED_106 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16];
array[1..17] of var 1..1: X_INTRODUCED_107 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
array[1..17] of int: X_INTRODUCED_108 = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2];
array[1..17] of int: X_INTRODUCED_109 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_0,X_INTRODUCED_17],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_1,X_INTRODUCED_17],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_2,X_INTRODUCED_18],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_3,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_4,X_INTRODUCED_20],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_5,X_INTRODUCED_21],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_6,X_INTRODUCED_22],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_7,X_INTRODUCED_23],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_8,X_INTRODUCED_24],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_9,X_INTRODUCED_25],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_10,X_INTRODUCED_26],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_11,X_INTRODUCED_27],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_12,X_INTRODUCED_28],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_13,X_INTRODUCED_29],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_14,X_INTRODUCED_30],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_15,X_INTRODUCED_31],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_16,X_INTRODUCED_32],-2);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_17,X_INTRODUCED_18],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_18,X_INTRODUCED_19],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_19,X_INTRODUCED_20],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_20,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_21,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_22,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_23,X_INTRODUCED_24],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_24,X_INTRODUCED_25],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_25,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_26,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_27,X_INTRODUCED_28],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_28,X_INTRODUCED_29],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_29,X_INTRODUCED_30],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_30,X_INTRODUCED_31],-1);
constraint int_lin_le(X_INTRODUCED_69,[X_INTRODUCED_31,X_INTRODUCED_32],-1);
constraint diffnChoco(X_INTRODUCED_103,X_INTRODUCED_104,X_INTRODUCED_105,X_INTRODUCED_105);
constraint diffnChoco(X_INTRODUCED_106,X_INTRODUCED_107,X_INTRODUCED_108,X_INTRODUCED_109);
constraint int_lin_eq(X_INTRODUCED_69,[end,X_INTRODUCED_32],1):: defines_var(end);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize end;
