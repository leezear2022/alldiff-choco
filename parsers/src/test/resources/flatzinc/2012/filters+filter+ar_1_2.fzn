predicate diffnChoco(array[int] of var int: x,array[int] of var int: y,array[int] of var int: dx,array[int] of var int: dy);
var 0..100: X_INTRODUCED_0;
var 0..100: X_INTRODUCED_1;
var 0..100: X_INTRODUCED_2;
var 0..100: X_INTRODUCED_3;
var 0..100: X_INTRODUCED_4;
var 0..100: X_INTRODUCED_5;
var 0..100: X_INTRODUCED_6;
var 0..100: X_INTRODUCED_7;
var 0..100: X_INTRODUCED_8;
var 0..100: X_INTRODUCED_9;
var 0..100: X_INTRODUCED_10;
var 0..100: X_INTRODUCED_11;
var 0..100: X_INTRODUCED_12;
var 0..100: X_INTRODUCED_13;
var 0..100: X_INTRODUCED_14;
var 0..100: X_INTRODUCED_15;
var 0..100: X_INTRODUCED_16;
var 0..100: X_INTRODUCED_17;
var 0..100: X_INTRODUCED_18;
var 0..100: X_INTRODUCED_19;
var 0..100: X_INTRODUCED_20;
var 0..100: X_INTRODUCED_21;
var 0..100: X_INTRODUCED_22;
var 0..100: X_INTRODUCED_23;
var 0..100: X_INTRODUCED_24;
var 0..100: X_INTRODUCED_25;
var 0..100: X_INTRODUCED_26;
var 0..100: X_INTRODUCED_27;
var 1..2: X_INTRODUCED_28;
var 1..2: X_INTRODUCED_29;
var 1..2: X_INTRODUCED_30;
var 1..2: X_INTRODUCED_31;
var 1..2: X_INTRODUCED_32;
var 1..2: X_INTRODUCED_33;
var 1..2: X_INTRODUCED_34;
var 1..2: X_INTRODUCED_35;
var 1..2: X_INTRODUCED_42;
var 1..2: X_INTRODUCED_43;
var 1..2: X_INTRODUCED_44;
var 1..2: X_INTRODUCED_45;
var 1..2: X_INTRODUCED_48;
var 1..2: X_INTRODUCED_49;
var 1..2: X_INTRODUCED_50;
var 1..2: X_INTRODUCED_51;
var 1..101: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var 1..101: X_INTRODUCED_102 ::var_is_introduced ;
var 1..101: X_INTRODUCED_103 ::var_is_introduced ;
var 1..101: X_INTRODUCED_104 ::var_is_introduced ;
var 1..101: end:: output_var = X_INTRODUCED_104;
array[1..28] of var 0..100: t:: output_array([1..28]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
array[1..28] of var 1..10: r:: output_array([1..28]) = [X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,1,1,1,1,1,1,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,1,1,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,1,1,1,1];
array[1..12] of var 0..1000: t_add = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
array[1..16] of var 0..1000: t_mul = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array[1..2] of int: X_INTRODUCED_59 = [1,-1];
array[1..12] of var 0..100: X_INTRODUCED_87 ::var_is_introduced  = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27];
array[1..12] of var 1..1: X_INTRODUCED_88 ::var_is_introduced  = [1,1,1,1,1,1,1,1,1,1,1,1];
array[1..12] of int: X_INTRODUCED_89 = [1,1,1,1,1,1,1,1,1,1,1,1];
array[1..16] of var 0..100: X_INTRODUCED_90 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array[1..16] of var 1..2: X_INTRODUCED_91 ::var_is_introduced  = [X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_42,X_INTRODUCED_43,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51];
array[1..16] of int: X_INTRODUCED_92 = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2];
array[1..16] of int: X_INTRODUCED_93 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_0,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_1,X_INTRODUCED_8],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_2,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_3,X_INTRODUCED_9],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_4,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_5,X_INTRODUCED_10],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_6,X_INTRODUCED_11],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_7,X_INTRODUCED_11],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_8,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_9,X_INTRODUCED_27],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_10,X_INTRODUCED_12],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_11,X_INTRODUCED_13],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_12,X_INTRODUCED_15],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_12,X_INTRODUCED_16],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_13,X_INTRODUCED_14],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_13,X_INTRODUCED_17],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_14,X_INTRODUCED_18],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_15,X_INTRODUCED_18],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_16,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_17,X_INTRODUCED_19],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_18,X_INTRODUCED_21],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_18,X_INTRODUCED_22],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_19,X_INTRODUCED_20],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_19,X_INTRODUCED_23],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_20,X_INTRODUCED_24],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_21,X_INTRODUCED_24],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_22,X_INTRODUCED_25],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_23,X_INTRODUCED_25],-2);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_24,X_INTRODUCED_26],-1);
constraint int_lin_le(X_INTRODUCED_59,[X_INTRODUCED_25,X_INTRODUCED_27],-1);
constraint diffnChoco(X_INTRODUCED_87,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_89);
constraint diffnChoco(X_INTRODUCED_90,X_INTRODUCED_91,X_INTRODUCED_92,X_INTRODUCED_93);
constraint int_lin_eq(X_INTRODUCED_59,[X_INTRODUCED_98,X_INTRODUCED_12],1):: defines_var(X_INTRODUCED_98);
constraint int_max(X_INTRODUCED_72,X_INTRODUCED_98,X_INTRODUCED_102);
constraint int_max(X_INTRODUCED_94,X_INTRODUCED_102,X_INTRODUCED_103);
constraint int_max(X_INTRODUCED_95,X_INTRODUCED_103,X_INTRODUCED_104);
constraint int_lin_eq([1,-1],[X_INTRODUCED_13,X_INTRODUCED_72],-1):: defines_var(X_INTRODUCED_72);
constraint int_lin_eq([1,-1],[X_INTRODUCED_26,X_INTRODUCED_94],-1):: defines_var(X_INTRODUCED_94);
constraint int_lin_eq([1,-1],[X_INTRODUCED_27,X_INTRODUCED_95],-1):: defines_var(X_INTRODUCED_95);
solve :: seq_search([int_search(t,smallest,indomain_min,complete),int_search(r,input_order,indomain_min,complete)]) minimize end;
